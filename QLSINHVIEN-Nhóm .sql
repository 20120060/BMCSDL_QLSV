/*----------------------------------------------------------

Trần Quốc Đỉnh – 20120056
Nguyễn Trí Đức - 20120060 
Nguyễn Thế Hiển - 20120078
Nguyễn Vũ Hiếu – 201200478

LAB: 03 - NHOM
NGAY: 15/04/2023
----------------------------------------------------------*/ 
-- CAU LENH TAO DATABASE

USE master
GO
IF DB_ID('QLSVNhom') IS NOT NULL
	DROP DATABASE [QLSVNhom]
GO
CREATE DATABASE [QLSVNhom]
GO
USE [QLSVNhom]
GO

-- CAU LENH TAO TABLE

CREATE TABLE SINHVIEN(
	MASV VARCHAR(20) NOT NULL,
	HOTEN NVARCHAR(100) NOT NULL,
	NGAYSINH DATETIME,
	DIACHI NVARCHAR(200),
	MALOP VARCHAR(20),
	TENDN NVARCHAR(100) NOT NULL,
	MATKHAU VARBINARY(100) NOT NULL,
	PRIMARY KEY(MASV)
)
GO

CREATE TABLE NHANVIEN(
	MANV VARCHAR(20) NOT NULL,
	HOTEN NVARCHAR(100) NOT NULL,
	EMAIL VARCHAR(20),
	LUONG VARBINARY(2048),
	TENDN NVARCHAR(100) NOT NULL,
	MATKHAU VARBINARY(100) NOT NULL,
	PUBKEY VARCHAR(20),
	PRIMARY KEY(MANV)
)
GO

CREATE TABLE LOP(
	MALOP VARCHAR(20) NOT NULL,
	TENLOP NVARCHAR(100) NOT NULL,
	MANV VARCHAR(20),
	PRIMARY KEY(MALOP)
)
GO

CREATE TABLE HOCPHAN(
	MAHP VARCHAR(20) NOT NULL,
	TENHP NVARCHAR(100) NOT NULL,
	SOTC INT,
	PRIMARY KEY(MAHP)
)
GO

CREATE TABLE BANGDIEM(
	MASV VARCHAR(20) NOT NULL,
	MAHP VARCHAR(20) NOT NULL,
	DIEMTHI VARBINARY (2048),
	PRIMARY KEY(MASV,MAHP)
)
GO

alter table SINHVIEN
add constraint FK_SINHVIEN_MALOP
foreign key (MALOP)
references LOP(MALOP)
--
alter table LOP
add constraint FK_LOP_NHANVIEN
foreign key (MANV)
references NHANVIEN(MANV)
--
alter table BANGDIEM
add constraint FK_BANGDIEM_SINHVIEN
foreign key (MASV)
references SINHVIEN(MASV)
--
alter table BANGDIEM
add constraint FK_BANGDIEM_HOCPHAN
foreign key (MAHP)
references HOCPHAN(MAHP)



-- CAU LENH TAO STORED PROCEDURE 

-- i) Stored Procedure: SP_INS_PUBLIC_NHANVIEN
-- Cau lenh tao Master Key 

IF NOT EXISTS
(
	SELECT * FROM sys.symmetric_keys WHERE symmetric_key_id = 101
)
	
CREATE MASTER KEY ENCRYPTION BY
	PASSWORD = 'abcd12'
GO

-- Cau lenh tao Key RSA_2048 va AES_256
--NV01:----------------------------------------------------------------------------------
IF NOT EXISTS
(
	SELECT * FROM sys.asymmetric_keys WHERE name = 'NV01'
)
CREATE ASYMMETRIC KEY NV01
	WITH ALGORITHM = RSA_2048
	ENCRYPTION BY PASSWORD = 'abcd12';
GO

IF NOT EXISTS
(
	SELECT * FROM sys.symmetric_keys WHERE name = 'Prikey'
)
CREATE SYMMETRIC KEY Prikey
	WITH ALGORITHM = AES_256
	ENCRYPTION BY ASYMMETRIC KEY NV01
GO

--NV02---------------------------------------------------------------------------------------------------------------
IF NOT EXISTS
(
	SELECT * FROM sys.asymmetric_keys WHERE name = 'NV02'
)
CREATE ASYMMETRIC KEY NV02
	WITH ALGORITHM = RSA_2048
	ENCRYPTION BY PASSWORD = 'abcd13';
GO

IF NOT EXISTS
(
	SELECT * FROM sys.symmetric_keys WHERE name = 'Prikey'
)
CREATE SYMMETRIC KEY Prikey
	WITH ALGORITHM = AES_256
	ENCRYPTION BY ASYMMETRIC KEY NV02
GO



IF OBJECT_ID('dbo.SP_INS_PUBLIC_NHANVIEN','P') IS NOT NULL 
    DROP PROCEDURE SP_INS_PUBLIC_NHANVIEN
GO

CREATE PROCEDURE SP_INS_PUBLIC_NHANVIEN(
	@MANV VARCHAR(20),
	@HOTEN NVARCHAR(100), 
	@EMAIL VARCHAR(20), 
	@LUONGCB INT,
	@TENDN NVARCHAR(100), 
	@MK NVARCHAR(50)
	)
AS
BEGIN
	INSERT INTO NHANVIEN(MANV,HOTEN,EMAIL,LUONG,TENDN,MATKHAU,PUBKEY)
	VALUES (@MANV, @HOTEN, @EMAIL, ENCRYPTBYASYMKEY(ASYMKEY_ID('NV01'), CONVERT(VARBINARY(2048),@LUONGCB)), @TENDN, HASHBYTES ('SHA1', @MK), CONVERT(VARCHAR(20), @MANV));
END;
GO

EXEC SP_INS_PUBLIC_NHANVIEN 'N01', 'NGUYEN VAN A', 'NVA@', 3000000, '1', '1';

-- TEST QUERY: SELECT * FROM NHANVIEN;

-- ii) Stored Procedure: SP_SEL_PUBLIC_NHANVIEN



IF OBJECT_ID('dbo.SP_SEL_PUBLIC_NHANVIEN','P') IS NOT NULL 
    DROP PROCEDURE SP_SEL_PUBLIC_NHANVIEN
GO

CREATE PROCEDURE SP_SEL_PUBLIC_NHANVIEN(
	@TENDN NVARCHAR(100),
	@MK NVARCHAR(50)
	)
AS
BEGIN
	OPEN SYMMETRIC KEY Prikey
	DECRYPTION BY ASYMMETRIC KEY NV01 WITH PASSWORD = 'abcd12'
	SELECT NV.MANV, NV.HOTEN, NV.EMAIL,CONVERT(INT, DECRYPTBYASYMKEY(ASYMKEY_ID('NV01'),NV.LUONG,@MK)) as LUONGCB
	FROM NHANVIEN AS NV
	CLOSE SYMMETRIC KEY Prikey
END
GO 
-- -- Stored Procedure xóa lớp học:
go
CREATE PROCEDURE SP_DELETE_CLASS(
	@MALOP VARCHAR(20),
	@TENLOP NVARCHAR(100),
	@MANV VARCHAR(20)
	)
AS
BEGIN
	if (select COUNT(*) from LOP where MALOP=@MALOP and TENLOP=@TENLOP and MANV=@MANV)>0 
	begin
	update SINHVIEN set MALOP=null where MALOP= @MALOP
	delete LOP where MALOP=@MALOP
	end
	else
	print('Error')
END

-- Stored Procedure điều chỉnh lớp học:
go
CREATE PROCEDURE SP_ALTER_CLASS(
	@MALOP VARCHAR(20),
	@MALOP1 VARCHAR(20),
	@TENLOP1 NVARCHAR(100),
	@MANV1 VARCHAR(20)
	)
AS
BEGIN
	if (select COUNT(*) from LOP where MALOP=@MALOP)>0 and (select COUNT(*) from LOP where MALOP=@MALOP1)=0
	begin
	insert into LOP(MALOP,TENLOP,MANV) values (@MALOP1,@TENLOP1,@MANV1)
	update SINHVIEN set MALOP=@MALOP1 where MALOP= @MALOP
	delete LOP where MALOP=@MALOP
	end
	else
	print('Error')
END

-- Stored Procedure điều chỉnh Sinh viên:

go
CREATE PROCEDURE SP_ALTER_SV(
	@MASV VARCHAR(20),
	@MASV1 VARCHAR(20),
	@HOTEN NVARCHAR(100),
	@DIACHI NVARCHAR(200),
	@MALOP VARCHAR(20),
	@TENDN NVARCHAR(100) 
	)
AS
BEGIN
	update SINHVIEN set HOTEN=@HOTEN,DIACHI=@DIACHI,MALOP=@MALOP,TENDN=@TENDN where MASV = @MASV;

END

-- Stored Procedure thêm Sinh viên:

go
CREATE PROCEDURE SP_INS_PUBLIC_SINHVIEN(@MASV nvarchar(20),@HOTEN nvarchar(100),@NGAYSINH DATETIME,
	@DIACHI NVARCHAR(200),@MALOP varchar(20),@TENDN nvarchar(100),@MATKHAU varchar(100))
AS
BEGIN
  INSERT INTO SINHVIEN (MASV,HOTEN,NGAYSINH,DIACHI,MALOP,TENDN,MATKHAU) 
  VALUES (@MASV,@HOTEN,@NGAYSINH,@DIACHI,@MALOP,@TENDN, CONVERT(varbinary, HASHBYTES('MD5', @MATKHAU)))
END;

go

EXEC SP_SEL_PUBLIC_NHANVIEN 'NV01','abcd12';
-- insert data

EXEC SP_INS_PUBLIC_NHANVIEN 'NV01', 'NGUYEN VAN A', 'nva@yahoo.com', 3000000, 'NVA', '123456';
EXEC SP_INS_PUBLIC_NHANVIEN 'NV02', 'NGUYEN VAN B', 'nvb@yahoo.com', 2000000, 'NVB', '1234567';
EXEC SP_INS_PUBLIC_NHANVIEN 'NV09', 'NGUYEN VU HIEU', 'nvh@yahoo.com', 2000000, 'NVH', '1111';
EXEC SP_INS_PUBLIC_NHANVIEN 'NV04', 'NGUYEN VAN C', 'nvc@yahoo.com', 3000000, 'NVC', '123456';
EXEC SP_INS_PUBLIC_NHANVIEN 'NV05', 'NGUYEN VAN D', 'nvD@yahoo.com', 2000000, 'NVD', '1234567';

INSERT INTO LOP(MALOP,TENLOP,MANV) VALUES ('L10A1',N'10A1','NV01');
INSERT INTO LOP(MALOP,TENLOP,MANV) VALUES ('L10A2',N'10A2','NV02');
INSERT INTO LOP(MALOP,TENLOP,MANV) VALUES ('L10A5',N'10A5','NV02');

-- tạo thêm procedure SP_INS_PUBLIC_SINHVIEN để mã hóa mật khẩu

EXEC SP_INS_PUBLIC_SINHVIEN 'SV01', 'TRAN THANH AN', '2/15/2007', N'25/3 Lạc Long Quân, Q.10, TP HCM', 'L10A1', 'TTA', '7wdugnx';
EXEC SP_INS_PUBLIC_SINHVIEN 'SV02', 'LE HOANG NHAN', '6/20/2007', N'215 Lý Thường Kiệt, TP Biên Hòa', 'L10A2', 'LHN', 'aaasjwi';
EXEC SP_INS_PUBLIC_SINHVIEN 'SV03', 'NGUYEN BAO HUY', '11/22/2007', N'234 Trần Não, An Phú, TP HCM', 'L10A2', 'NBH', 'auisweb';
EXEC SP_INS_PUBLIC_SINHVIEN 'SV04', 'NGUYEN VU HIEU', '2/5/2007', N' TP HCM', 'L10A5', 'NVH', '7wufdggnx';
EXEC SP_INS_PUBLIC_SINHVIEN 'SV05', 'LE HOANG BAO', '6/10/2007', N' TP Biên Hòa', 'L10A5', 'LHB', 'aasjwi';
EXEC SP_INS_PUBLIC_SINHVIEN 'SV06', 'NGUYEN BAO HOANG', '11/2/2007', N'An Phú', 'L10A5', 'NBH', 'audsiweb';




INSERT INTO HOCPHAN(MAHP,TENHP,SOTC) VALUES ('HH',N'Hóa học',4);
INSERT INTO HOCPHAN(MAHP,TENHP,SOTC) VALUES ('TH',N'Toán học',4);

GO

-- tạo thêm procedure để mã hóa DIEM THI bằng Private Key của nhân viên đăng nhập:

IF OBJECT_ID('dbo.SP_INS_MARK_SINHVIEN','P') IS NOT NULL 
    DROP PROCEDURE SP_INS_MARK_SINHVIEN
GO

CREATE PROC SP_INS_MARK_SINHVIEN (
@MASV VARCHAR(20),
@MAHP VARCHAR(20),
@DIEMTHI INT,
@MANV VARCHAR(20) )

AS
BEGIN
INSERT INTO BANGDIEM(MASV,MAHP,DIEMTHI) VALUES(@MASV,@MAHP,ENCRYPTBYASYMKEY(ASYMKEY_ID(@MANV), CONVERT(VARBINARY(2048),@DIEMTHI)))
END

GO
EXEC SP_INS_MARK_SINHVIEN 'SV01','HH',10, 'NV01';
--EXEC SP_INS_MARK_SINHVIEN 'SV01','TH',9,'NV01';
EXEC SP_INS_MARK_SINHVIEN 'SV02','HH',9,'NV02';
--EXEC SP_INS_MARK_SINHVIEN 'SV02','TH',8,'NV02';
--EXEC SP_INS_MARK_SINHVIEN 'SV03','HH',6,'NV02';
--EXEC SP_INS_MARK_SINHVIEN 'SV03','TH',8,'NV02';

--delete from BANGDIEM


SELECT * FROM NHANVIEN
SELECT * FROM SINHVIEN
SELECT * FROM LOP
SELECT * FROM HOCPHAN
SELECT * FROM BANGDIEM